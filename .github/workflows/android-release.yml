name: Build and Release

on:
  push:
    branches:
      - "release/*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup keystore
        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > /tmp/my-release-key.jks
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}

      - name: Set keystore properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "storeFile=/tmp/my-release-key.jks" >> $GITHUB_ENV

      - name: Set Google Client ID
        run: echo "CHAT_URL=${{ secrets.CHAT_URL }}" > .env

      - name: Get version from pubspec
        id: version
        run: |
          echo "::set-output name=version::$(grep 'version: ' pubspec.yaml | cut -d ' ' -f2)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Build AAB
        run: |
          flutter pub get
          flutter test
          flutter build appbundle --release --no-tree-shake-icons
        env:
          CHAT_URL: ${{ secrets.CHAT_URL }}

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.sequencetech.topics
          releaseFiles: ./build/app/outputs/bundle/release/app-release.aab
          track: internal
          inAppUpdatePriority: 0
          status: completed # change this to 'completed' after the first successful run
          changesNotSentForReview: false

      - name: Upload AAB to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/bundle/release/app-release.aab
          asset_name: topics-release-${{ steps.version.outputs.version }}.aab
          asset_content_type: application/octet-stream
